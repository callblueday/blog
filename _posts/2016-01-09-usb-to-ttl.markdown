---
title: 电子知识入门-开发主板以及基本概念
date: 2016-01-09T11:02:34+08:00
---

从一个纯软件的开发者慢慢接触到电子硬件，初次听说什么杜邦线，转接头，rj25接口这类术语，完全是懵的。听同事在那里激情讨论，时不时的彼此点头赞许，开怀大笑，我却在旁边一脸茫然像在听天书，不明所以，内心十分受伤，因此决心写一些文章来记录和理解一些电子硬件方面的基础知识，也算是学习笔记，总结一下入门必备技能。

本篇主要涉及到下面几个概念

- 主板
- 开发主板
- 固件
- 引脚
- 杜邦线
- USB TO TTL工具
- 驱动程序
- COM端口

先上一张图

![zeropi与usb2ttl](/img/electronic/usb-2-ttl-1.png)

这是一块开发主板（zeroPi）通过几根线，与一个带usb插头的工具连接。先科普一下，什么是开发主板。借用网上的解释：

>“开发主板是用的验证功能性电路板，用以开发实验，验证硬件和软件的功能和性能，是过度产品，如ARM,DSP等CPU的开发板。
主板一般是的是PC的主板，是PC电脑里的主要组成部件，是成熟的量产产品”。 

说白了就是具备数据处理能力的电路板，一般用供开发人员使用。目前比较流行的有[arduino](https://www.arduino.cc/) 和[树莓派（raspberrypi）](https://www.raspberrypi.org/)。那么开发版有什么作用呢？电脑运行有一个重要部件，叫做**主板**，主板上面画满了电路、芯片，还有处理器，芯片里写了默认程序，处理用作数据和逻辑运算，当主板接上电以后，从用户输入进电脑中的信息，会转化为二进制数据，通过电路传递给芯片和处理器，从而把计算处理得到的结果再反馈给用户，主板充当的就是一个数据的接收和处理的角色。

**开发主板**也是主板，只不过是实验性质的，相当于功能弱化的微型电脑，但它同样能够接收数据，处理数据并且返回信号。开发人员借助工具与开发版建立连接，然后发送数据给它，同时接收开发版的数据返回。当然硬冰冰的板子是不知道你给他有没有发数据，更不知道怎么去处理数据，这时候就需要电子工程师提前给他写好一段逻辑处理程序，比如该程序会先跟用户约定，“喂，你待会儿让发1给我，我就知道你是要执行开灯的动作了，你发0给我，我就去关灯，知道不？”然后把这段程序“烧入”到主板中，为什么要用“烧”这个词呢，好吧，这是行业术语，你只需要理解，就是把程序通过一些工具注入到主板中就行了。

烧入成功以后，就相当于给主板安装了一个大脑，这个大脑有简单的逻辑，知道当接触到了信号1，就去开灯，接受到了信号2，就去关灯。如果你发了3，因为程序里提前没有写处理它的逻辑，那就对不起了，这个简单的大脑还不认识3，自然就不会对你有任何的响应了。烧入的这段程序，在行业术语里叫做“**固件**”。

那么刚才描述了主板收到1和0时，会去执行开灯和关灯，这是怎么办到的？首先主板不是人，不会真的去把灯打开或者关掉。往更本质的讲，灯的开关动作，实际上是因为电流信号发生了变化，那么主板上的程序只需要能控制电信号发生变化就可以了。

还有一个灯跟开发板是怎么联系的？看上面那张图中的主板，上面有很多针针脚脚的东西，那个叫做“**引脚**”，接上引脚的那几根线叫做“**杜邦线**”，杜邦线是专为引脚适配的。引脚相当于是把主板的上的电路做了一个接头，通过杜邦线可以与其他设备连接上，从而联通电路，使信号得以传输起来。如果是这样，刚才提到的开灯关灯，就可以通过杜邦线和引脚将小灯泡与开发板连接起来，通过传输信号，达到目的。

这就简单介绍了开发主板的作用和主板上的引脚。但主板电路那么复杂，这么多的线和引脚，也不是随便接的吧？下面简要探究一下几种类型的引脚。先上图

![zeropi与usb2ttl](/img/electronic/usb-2-ttl-2.png)

图中可以看到，每个引脚旁边都标记了一个个小字，这些小字就是用来说明这些引脚的作用的。主板上的电路图不是随便画的，每个节点都有它负责的工作，比如有的负责联通电源，有的负责发送信号，有的负责接收信号等，各司其职，不能乱掉，只有参考标记，将外接设备一一对号连接，才能使主板和设备工作起来。譬如图中红框标记的，tx和rx引脚，tx是负责主板向外发送数据，rx是负责接收发送到主板中的数据。

要使主板能够接收数据和发送数据，必须要有一个连接的设备，通常我们把主板连接到电脑上，借助电脑上的软件工具来发送信号给主板。
可是主板上都是针针脚脚的东东，连USB插头都木有啊，该怎么跟电脑连呢，总不能接根杜邦线就随便插吧？别急，有一些专门的工具来做这个事情，比如：usb-to-ttl，继续上图

![zeropi与usb2ttl](/img/electronic/usb-2-ttl-3.png)

上图的这个小东西学名叫做“**USB TO TTL工具**”或者是“**TTL线**”，它的一头是USB接口，另外一头一般有4个带杜邦头的插管，分别是GND、RX、TX、VCC。将杜邦头与开发主板上对应标记的引脚连接好，另一头插上电脑，这不就把主板和电脑连接上了么。

TTL线的杜邦头插管有四个，刚才介绍了RX和TX的作用，分别是接收数据口和发送口，GND全称为Ground，就是地线的意思，VCC是Volt Current Condense，表示电源，因此带有这两个标记的插管，一个是接地线引脚，一个接电源引脚。不过需要注意的是，TTL线的TX插管需要接上主板的RX引脚，RX则接上主板的TX引脚。这是因为一端发，另一算肯定就是接，顺序不要搞错。

全部接好后，就是图1的样子，再把usb插头插入电脑的usb插口上，这样就使开发主板和电脑连接上了。

上述步骤只是物理连接，还差最后一步，就是需要在电脑上安装**USB TO TTL工具的驱动**。

什么是“**驱动**”呢?

>驱动程序就是用来向操作系统提供一个访问、使用硬件设备的接口，实现操作系统和系统中所有的硬件设备的之间的通信程序，它能告诉系统硬件设备所包含的功能，并且在软件系统要实现某个功能时，调动硬件并使硬件用最有效的方式来完成它。它实际上完成的是硬件设备电子信号与操作系统及软件的高级编程语言之间的互相翻译。

跟固件的作用有点类似，它也是一段程序，不过该程序只是用来解释特定设备的。 安装了驱动以后，它会告诉操作系统：“你刚刚连接上的了一个硬件了，它的功能是某某某，调用它的接口是某某某,方法是某某某，但该设备说的是英文，而你说的中文，所以你要与它通信就来我这里，我帮你翻译并传达指令”。安装了该驱动以后，开发主板才会显示在操作系统的设备列表上，并获得一个“**COM端口号**”，这时候才算是真正实现了开发主板和电脑的通信渠道联通。

然后稍微科普一下“**COM口**”，COM口(cluster communication port)即串行通讯端口，如下图带有很多针脚的接口，现在已经慢慢被usb取代了。

![zeropi与usb2ttl](/img/electronic/com.png)


借助pc上的一些串口通信工具，我们利用COM端口号，就可以像主板发送数据和接受数据啦。用什么工具，怎么控制主板写个示例程序，就下篇再讲了。


文章比较零散，碰到了就先记录一下，希望可以起到些入门引导作用。

